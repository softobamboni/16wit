ca65 V2.19 - Git ccdc5b9
Main file   : rectangle.asm
Current file: rectangle.asm

000000r 1               .org $080D
00080D  1               .p816
00080D  1               .segment "STARTUP"
00080D  1               .segment "INIT"
00080D  1               .segment "ONCE"
00080D  1               .segment "CODE"
00080D  1               .include "x16.inc"
00080D  2               .ifndef X16_INC
00080D  2               X16_INC  = 1
00080D  2               
00080D  2               .ifndef __CX16__
00080D  2               __CX16__ = 1
00080D  2               .endif
00080D  2               
00080D  2               ; X16 addresses, values, and macros
00080D  2               ; Accurate for ROM release R38
00080D  2               
00080D  2               SD_DEVICE   = 8 ; also host file system on emulator if no SD image mounted
00080D  2               DISK_DEVICE = SD_DEVICE ; change if to be loaded off IEC device
00080D  2               
00080D  2               
00080D  2               ; RAM Addresses
00080D  2               
00080D  2               ; Kernal Registers
00080D  2               r0                = $02
00080D  2               r0L               = r0
00080D  2               r0H               = r0+1
00080D  2               r1                = $04
00080D  2               r1L               = r1
00080D  2               r1H               = r1+1
00080D  2               r2                = $06
00080D  2               r2L               = r2
00080D  2               r2H               = r2+1
00080D  2               r3                = $08
00080D  2               r3L               = r3
00080D  2               r3H               = r3+1
00080D  2               r4                = $0A
00080D  2               r4L               = r4
00080D  2               r4H               = r4+1
00080D  2               r5                = $0C
00080D  2               r5L               = r5
00080D  2               r5H               = r5+1
00080D  2               r6                = $0E
00080D  2               r6L               = r6
00080D  2               r6H               = r6+1
00080D  2               r7                = $10
00080D  2               r7L               = r7
00080D  2               r7H               = r7+1
00080D  2               r8                = $12
00080D  2               r8L               = r8
00080D  2               r8H               = r8+1
00080D  2               r9                = $14
00080D  2               r9L               = r9
00080D  2               r9H               = r9+1
00080D  2               r10               = $16
00080D  2               r10L              = r10
00080D  2               r10H              = r10+1
00080D  2               r11               = $18
00080D  2               r11L              = r11
00080D  2               r11H              = r11+1
00080D  2               r12               = $1A
00080D  2               r12L              = r12
00080D  2               r12H              = r12+1
00080D  2               r13               = $1C
00080D  2               r13L              = r13
00080D  2               r13H              = r13+1
00080D  2               r14               = $1E
00080D  2               r14L              = r14
00080D  2               r14H              = r14+1
00080D  2               r15               = $20
00080D  2               r15L              = r15
00080D  2               r15H              = r15+1
00080D  2               
00080D  2               ; Zero-Page userspace
00080D  2               ZP_PTR_1          = $7E   ; four pointers for temporary use only
00080D  2               ZP_PTR_2          = $22
00080D  2               ZP_PTR_3          = $24
00080D  2               ZP_PTR_4          = $26
00080D  2               
00080D  2               ; I/O Registers
00080D  2               VERA_addr_low     = $9F20
00080D  2               VERA_addr_high    = $9F21
00080D  2               VERA_addr_bank    = $9F22
00080D  2               VERA_data0        = $9F23
00080D  2               VERA_data1        = $9F24
00080D  2               VERA_ctrl         = $9F25
00080D  2               VERA_ien          = $9F26
00080D  2               VERA_isr          = $9F27
00080D  2               VERA_irqline_l    = $9F28
00080D  2               VERA_dc_video     = $9F29 ; VERA_ctrl(1) (DCSEL) = 0
00080D  2               VERA_dc_hscale    = $9F2A ; VERA_ctrl(1) (DCSEL) = 0
00080D  2               VERA_dc_vscale    = $9F2B ; VERA_ctrl(1) (DCSEL) = 0
00080D  2               VERA_dc_border    = $9F2C ; VERA_ctrl(1) (DCSEL) = 0
00080D  2               VERA_dc_hstart    = $9F29 ; VERA_ctrl(1) (DCSEL) = 1
00080D  2               VERA_dc_hstop     = $9F2A ; VERA_ctrl(1) (DCSEL) = 1
00080D  2               VERA_dc_vsstart   = $9F2B ; VERA_ctrl(1) (DCSEL) = 1
00080D  2               VERA_dc_vstop     = $9F2C ; VERA_ctrl(1) (DCSEL) = 1
00080D  2               VERA_L0_config    = $9F2D
00080D  2               VERA_L0_mapbase   = $9F2E
00080D  2               VERA_L0_tilebase  = $9F2F
00080D  2               VERA_L0_hscroll_l = $9F30
00080D  2               VERA_L0_hscroll_h = $9F31
00080D  2               VERA_L0_vscroll_l = $9F32
00080D  2               VERA_L0_vscroll_h = $9F33
00080D  2               VERA_L1_config    = $9F34
00080D  2               VERA_L1_mapbase   = $9F35
00080D  2               VERA_L1_tilebase  = $9F36
00080D  2               VERA_L1_hscroll_l = $9F37
00080D  2               VERA_L1_hscroll_h = $9F38
00080D  2               VERA_L1_vscroll_l = $9F39
00080D  2               VERA_L1_vscroll_h = $9F3A
00080D  2               VERA_audio_ctrl   = $9F3B
00080D  2               VERA_audio_rate   = $9F3C
00080D  2               VERA_audio_data   = $9F3D
00080D  2               VERA_spi_data     = $9F3E
00080D  2               VERA_spi_ctrl     = $9F3F
00080D  2               
00080D  2               ROM_BANK          = $01
00080D  2               RAM_BANK          = $00
00080D  2               
00080D  2               YM_reg            = $9F40
00080D  2               YM_data           = $9F41
00080D  2               
00080D  2               ; Emulator Registers
00080D  2               GIF_ctrl          = $9FB5
00080D  2               
00080D  2               ; ROM Banks
00080D  2               KERNAL_ROM_BANK   = 0
00080D  2               KEYBOARD_ROM_BANK = 1
00080D  2               CBDOS_ROM_BANK    = 2
00080D  2               GEOS_ROM_BANK     = 3
00080D  2               BASIC_ROM_BANK    = 4
00080D  2               MONITOR_ROM_BANK  = 5
00080D  2               CHARSET_ROM_BANK  = 6
00080D  2               
00080D  2               ; Banked Addresses
00080D  2               RAM_WIN           = $A000
00080D  2               RAM_WIN_SIZE      = $2000
00080D  2               ROM_WIN           = $C000
00080D  2               
00080D  2               ; Kernal Subroutines
00080D  2               ENTROPY_GET                   := $FECF
00080D  2               CONSOLE_set_paging_message    := $FED5
00080D  2               CONSOLE_put_image             := $FED8
00080D  2               CONSOLE_init                  := $FEDB
00080D  2               CONSOLE_put_char              := $FEDE
00080D  2               CONSOLE_get_char              := $FEE1
00080D  2               MEMORY_FILL                   := $FEE4
00080D  2               MEMORY_COPY                   := $FEE7
00080D  2               MEMORY_CRC                    := $FEEA
00080D  2               MEMORY_DECOMPRESS             := $FEED
00080D  2               SPRITE_set_image              := $FEF0
00080D  2               SPRITE_set_position           := $FEF3
00080D  2               FB_init                       := $FEF6
00080D  2               FB_get_info                   := $FEF9
00080D  2               FB_set_palette                := $FEFC
00080D  2               FB_cursor_position            := $FEFF
00080D  2               FB_cursor_next_line           := $FF02
00080D  2               FB_get_pixel                  := $FF05
00080D  2               FB_get_pixels                 := $FF08
00080D  2               FB_set_pixel                  := $FF0B
00080D  2               FB_set_pixels                 := $FF0E
00080D  2               FB_set_8_pixels               := $FF11
00080D  2               FB_set_8_pixels_opaque        := $FF14
00080D  2               FB_fill_pixels                := $FF17
00080D  2               FB_filter_pixels              := $FF1A
00080D  2               FB_move_pixels                := $FF1D
00080D  2               GRAPH_init                    := $FF20
00080D  2               GRAPH_clear                   := $FF23
00080D  2               GRAPH_set_window              := $FF26
00080D  2               GRAPH_set_colors              := $FF29
00080D  2               GRAPH_draw_line               := $FF2C
00080D  2               GRAPH_draw_rect               := $FF2F
00080D  2               GRAPH_move_rect               := $FF32
00080D  2               GRAPH_draw_oval               := $FF35
00080D  2               GRAPH_draw_image              := $FF38
00080D  2               GRAPH_set_font                := $FF3B
00080D  2               GRAPH_get_char_size           := $FF3E
00080D  2               GRAPH_put_char                := $FF41
00080D  2               MONITOR                       := $FF44
00080D  2               ENTER_BASIC                   := $FF47
00080D  2               CLOSE_ALL                     := $FF4A
00080D  2               CLOCK_SET_DATE_TIME           := $FF4D
00080D  2               CLOCK_GET_DATE_TIME           := $FF50
00080D  2               JOYSTICK_SCAN                 := $FF53
00080D  2               JOYSTICK_GET                  := $FF56
00080D  2               SCREEN_MODE               		:= $FF5F
00080D  2               SCREEN_SET_CHARSET            := $FF62
00080D  2               PFKEY                         := $FF65
00080D  2               MOUSE_CONFIG                  := $FF68
00080D  2               MOUSE_GET                     := $FF6B
00080D  2               JSRFAR_kernal_addr            := $FF6E
00080D  2               MOUSE_SCAN                    := $FF71
00080D  2               FETCH                         := $FF74
00080D  2               STASH                         := $FF77
00080D  2               CMPARE                        := $FF7A
00080D  2               PRIMM                         := $FF7D
00080D  2               
00080D  2               SCINIT                        := $FF81
00080D  2               IOINIT                        := $FF84
00080D  2               RAMTAS                        := $FF87
00080D  2               RESTOR                        := $FF8A
00080D  2               LKUPLA                        := $FF8D
00080D  2               SETMSG                        := $FF90
00080D  2               SECOND                        := $FF93
00080D  2               TKSA                          := $FF96
00080D  2               MEMTOP                        := $FF99
00080D  2               MEMBOT                        := $FF9C
00080D  2               SETTMO                        := $FFA2
00080D  2               IECIN                         := $FFA5
00080D  2               IECOUT                        := $FFA8
00080D  2               UNTALK                        := $FFAB
00080D  2               UNLISTEN                      := $FFAE
00080D  2               LISTEN                        := $FFB1
00080D  2               TALK                          := $FFB4
00080D  2               READST                        := $FFB7
00080D  2               SETLFS                        := $FFBA
00080D  2               SETNAM                        := $FFBD
00080D  2               OPEN                          := $FFC0
00080D  2               CLOSE                         := $FFC3
00080D  2               CHKIN                         := $FFC6
00080D  2               CHKOUT                        := $FFC9
00080D  2               CLRCHN                        := $FFCC
00080D  2               CHRIN                         := $FFCF
00080D  2               BASIN                         := CHRIN ; alias
00080D  2               CHROUT                        := $FFD2
00080D  2               BSOUT                         := CHROUT ; alias
00080D  2               LOAD                          := $FFD5
00080D  2               SAVE                          := $FFD8
00080D  2               SETTIM                        := $FFDB
00080D  2               RDTIM                         := $FFDE
00080D  2               STOP                          := $FFE1
00080D  2               GETIN                         := $FFE4
00080D  2               CLALL                         := $FFE7
00080D  2               UDTIM                         := $FFEA
00080D  2               SCREEN                        := $FFED
00080D  2               PLOT                          := $FFF0
00080D  2               IOBASE                        := $FFF3
00080D  2               
00080D  2               ; BASIC Vectors
00080D  2               BASIC_PANIC       := $C000
00080D  2               BASIC_INIT        := $C003
00080D  2               
00080D  2               
00080D  2               ; VRAM Addresses
00080D  2               VRAM_petscii   = $0F800
00080D  2               VRAM_psg       = $1F9C0
00080D  2               VRAM_palette   = $1FA00
00080D  2               VRAM_sprattr   = $1FC00
00080D  2               
00080D  2               ; RAM Vectors
00080D  2               IRQVec         := $0314
00080D  2               BRKVec         := $0316
00080D  2               NMIVec         := $0318
00080D  2               FETVec         := $03AF
00080D  2               ;STAVec         := TBD
00080D  2               ;CMPVec         := TBD
00080D  2               
00080D  2               
00080D  2               ;   Macros
00080D  2               
00080D  2               .macro VERA_SET_ADDR addr, stride
00080D  2                  .ifnblank stride
00080D  2                     .if stride < 0
00080D  2                        lda #((^addr) | $08 | ((0-stride) << 4))
00080D  2                     .else
00080D  2                        lda #((^addr) | (stride << 4))
00080D  2                     .endif
00080D  2                  .else
00080D  2                     lda #(^addr) | $10
00080D  2                  .endif
00080D  2               
00080D  2                  sta VERA_addr_bank
00080D  2                  lda #(>addr)
00080D  2                  sta VERA_addr_high
00080D  2                  lda #(<addr)
00080D  2                  sta VERA_addr_low
00080D  2               .endmacro
00080D  2               
00080D  2               .macro JSRFAR far_sr_addr, bank
00080D  2               	jsr JSRFAR_kernal_addr
00080D  2               	.addr far_sr_addr
00080D  2               	.byte bank
00080D  2               .endmacro
00080D  2               
00080D  2               .endif
00080D  2               
00080D  1               width 	= $30
00080D  1               height 	= $32
00080D  1               xpoint	= $34
00080D  1               ypoint	= $36
00080D  1               xpoint2 = $2A
00080D  1               ypoint2 = $2C
00080D  1               nibble 	= $38	;8 bit
00080D  1               nibble2 = $39	;8 bit
00080D  1               origin	= $24
00080D  1               xcalcd  = $26
00080D  1               ycalcd  = $28
00080D  1               temp 	= $22
00080D  1               
00080D  1               xnumber = 48
00080D  1               ynumber = 48
00080D  1               
00080D  1               wnumber = 64
00080D  1               hnumber = 64
00080D  1               
00080D  1               .include "init.asm"
00080D  2               .p816
00080D  2               .include "x16.inc"
00080D  3               .ifndef X16_INC
00080D  3               X16_INC  = 1
00080D  3               
00080D  3               .ifndef __CX16__
00080D  3               __CX16__ = 1
00080D  3               .endif
00080D  3               
00080D  3               ; X16 addresses, values, and macros
00080D  3               ; Accurate for ROM release R38
00080D  3               
00080D  3               SD_DEVICE   = 8 ; also host file system on emulator if no SD image mounted
00080D  3               DISK_DEVICE = SD_DEVICE ; change if to be loaded off IEC device
00080D  3               
00080D  3               
00080D  3               ; RAM Addresses
00080D  3               
00080D  3               ; Kernal Registers
00080D  3               r0                = $02
00080D  3               r0L               = r0
00080D  3               r0H               = r0+1
00080D  3               r1                = $04
00080D  3               r1L               = r1
00080D  3               r1H               = r1+1
00080D  3               r2                = $06
00080D  3               r2L               = r2
00080D  3               r2H               = r2+1
00080D  3               r3                = $08
00080D  3               r3L               = r3
00080D  3               r3H               = r3+1
00080D  3               r4                = $0A
00080D  3               r4L               = r4
00080D  3               r4H               = r4+1
00080D  3               r5                = $0C
00080D  3               r5L               = r5
00080D  3               r5H               = r5+1
00080D  3               r6                = $0E
00080D  3               r6L               = r6
00080D  3               r6H               = r6+1
00080D  3               r7                = $10
00080D  3               r7L               = r7
00080D  3               r7H               = r7+1
00080D  3               r8                = $12
00080D  3               r8L               = r8
00080D  3               r8H               = r8+1
00080D  3               r9                = $14
00080D  3               r9L               = r9
00080D  3               r9H               = r9+1
00080D  3               r10               = $16
00080D  3               r10L              = r10
00080D  3               r10H              = r10+1
00080D  3               r11               = $18
00080D  3               r11L              = r11
00080D  3               r11H              = r11+1
00080D  3               r12               = $1A
00080D  3               r12L              = r12
00080D  3               r12H              = r12+1
00080D  3               r13               = $1C
00080D  3               r13L              = r13
00080D  3               r13H              = r13+1
00080D  3               r14               = $1E
00080D  3               r14L              = r14
00080D  3               r14H              = r14+1
00080D  3               r15               = $20
00080D  3               r15L              = r15
00080D  3               r15H              = r15+1
00080D  3               
00080D  3               ; Zero-Page userspace
00080D  3               ZP_PTR_1          = $7E   ; four pointers for temporary use only
00080D  3               ZP_PTR_2          = $22
00080D  3               ZP_PTR_3          = $24
00080D  3               ZP_PTR_4          = $26
00080D  3               
00080D  3               ; I/O Registers
00080D  3               VERA_addr_low     = $9F20
00080D  3               VERA_addr_high    = $9F21
00080D  3               VERA_addr_bank    = $9F22
00080D  3               VERA_data0        = $9F23
00080D  3               VERA_data1        = $9F24
00080D  3               VERA_ctrl         = $9F25
00080D  3               VERA_ien          = $9F26
00080D  3               VERA_isr          = $9F27
00080D  3               VERA_irqline_l    = $9F28
00080D  3               VERA_dc_video     = $9F29 ; VERA_ctrl(1) (DCSEL) = 0
00080D  3               VERA_dc_hscale    = $9F2A ; VERA_ctrl(1) (DCSEL) = 0
00080D  3               VERA_dc_vscale    = $9F2B ; VERA_ctrl(1) (DCSEL) = 0
00080D  3               VERA_dc_border    = $9F2C ; VERA_ctrl(1) (DCSEL) = 0
00080D  3               VERA_dc_hstart    = $9F29 ; VERA_ctrl(1) (DCSEL) = 1
00080D  3               VERA_dc_hstop     = $9F2A ; VERA_ctrl(1) (DCSEL) = 1
00080D  3               VERA_dc_vsstart   = $9F2B ; VERA_ctrl(1) (DCSEL) = 1
00080D  3               VERA_dc_vstop     = $9F2C ; VERA_ctrl(1) (DCSEL) = 1
00080D  3               VERA_L0_config    = $9F2D
00080D  3               VERA_L0_mapbase   = $9F2E
00080D  3               VERA_L0_tilebase  = $9F2F
00080D  3               VERA_L0_hscroll_l = $9F30
00080D  3               VERA_L0_hscroll_h = $9F31
00080D  3               VERA_L0_vscroll_l = $9F32
00080D  3               VERA_L0_vscroll_h = $9F33
00080D  3               VERA_L1_config    = $9F34
00080D  3               VERA_L1_mapbase   = $9F35
00080D  3               VERA_L1_tilebase  = $9F36
00080D  3               VERA_L1_hscroll_l = $9F37
00080D  3               VERA_L1_hscroll_h = $9F38
00080D  3               VERA_L1_vscroll_l = $9F39
00080D  3               VERA_L1_vscroll_h = $9F3A
00080D  3               VERA_audio_ctrl   = $9F3B
00080D  3               VERA_audio_rate   = $9F3C
00080D  3               VERA_audio_data   = $9F3D
00080D  3               VERA_spi_data     = $9F3E
00080D  3               VERA_spi_ctrl     = $9F3F
00080D  3               
00080D  3               ROM_BANK          = $01
00080D  3               RAM_BANK          = $00
00080D  3               
00080D  3               YM_reg            = $9F40
00080D  3               YM_data           = $9F41
00080D  3               
00080D  3               ; Emulator Registers
00080D  3               GIF_ctrl          = $9FB5
00080D  3               
00080D  3               ; ROM Banks
00080D  3               KERNAL_ROM_BANK   = 0
00080D  3               KEYBOARD_ROM_BANK = 1
00080D  3               CBDOS_ROM_BANK    = 2
00080D  3               GEOS_ROM_BANK     = 3
00080D  3               BASIC_ROM_BANK    = 4
00080D  3               MONITOR_ROM_BANK  = 5
00080D  3               CHARSET_ROM_BANK  = 6
00080D  3               
00080D  3               ; Banked Addresses
00080D  3               RAM_WIN           = $A000
00080D  3               RAM_WIN_SIZE      = $2000
00080D  3               ROM_WIN           = $C000
00080D  3               
00080D  3               ; Kernal Subroutines
00080D  3               ENTROPY_GET                   := $FECF
00080D  3               CONSOLE_set_paging_message    := $FED5
00080D  3               CONSOLE_put_image             := $FED8
00080D  3               CONSOLE_init                  := $FEDB
00080D  3               CONSOLE_put_char              := $FEDE
00080D  3               CONSOLE_get_char              := $FEE1
00080D  3               MEMORY_FILL                   := $FEE4
00080D  3               MEMORY_COPY                   := $FEE7
00080D  3               MEMORY_CRC                    := $FEEA
00080D  3               MEMORY_DECOMPRESS             := $FEED
00080D  3               SPRITE_set_image              := $FEF0
00080D  3               SPRITE_set_position           := $FEF3
00080D  3               FB_init                       := $FEF6
00080D  3               FB_get_info                   := $FEF9
00080D  3               FB_set_palette                := $FEFC
00080D  3               FB_cursor_position            := $FEFF
00080D  3               FB_cursor_next_line           := $FF02
00080D  3               FB_get_pixel                  := $FF05
00080D  3               FB_get_pixels                 := $FF08
00080D  3               FB_set_pixel                  := $FF0B
00080D  3               FB_set_pixels                 := $FF0E
00080D  3               FB_set_8_pixels               := $FF11
00080D  3               FB_set_8_pixels_opaque        := $FF14
00080D  3               FB_fill_pixels                := $FF17
00080D  3               FB_filter_pixels              := $FF1A
00080D  3               FB_move_pixels                := $FF1D
00080D  3               GRAPH_init                    := $FF20
00080D  3               GRAPH_clear                   := $FF23
00080D  3               GRAPH_set_window              := $FF26
00080D  3               GRAPH_set_colors              := $FF29
00080D  3               GRAPH_draw_line               := $FF2C
00080D  3               GRAPH_draw_rect               := $FF2F
00080D  3               GRAPH_move_rect               := $FF32
00080D  3               GRAPH_draw_oval               := $FF35
00080D  3               GRAPH_draw_image              := $FF38
00080D  3               GRAPH_set_font                := $FF3B
00080D  3               GRAPH_get_char_size           := $FF3E
00080D  3               GRAPH_put_char                := $FF41
00080D  3               MONITOR                       := $FF44
00080D  3               ENTER_BASIC                   := $FF47
00080D  3               CLOSE_ALL                     := $FF4A
00080D  3               CLOCK_SET_DATE_TIME           := $FF4D
00080D  3               CLOCK_GET_DATE_TIME           := $FF50
00080D  3               JOYSTICK_SCAN                 := $FF53
00080D  3               JOYSTICK_GET                  := $FF56
00080D  3               SCREEN_MODE               		:= $FF5F
00080D  3               SCREEN_SET_CHARSET            := $FF62
00080D  3               PFKEY                         := $FF65
00080D  3               MOUSE_CONFIG                  := $FF68
00080D  3               MOUSE_GET                     := $FF6B
00080D  3               JSRFAR_kernal_addr            := $FF6E
00080D  3               MOUSE_SCAN                    := $FF71
00080D  3               FETCH                         := $FF74
00080D  3               STASH                         := $FF77
00080D  3               CMPARE                        := $FF7A
00080D  3               PRIMM                         := $FF7D
00080D  3               
00080D  3               SCINIT                        := $FF81
00080D  3               IOINIT                        := $FF84
00080D  3               RAMTAS                        := $FF87
00080D  3               RESTOR                        := $FF8A
00080D  3               LKUPLA                        := $FF8D
00080D  3               SETMSG                        := $FF90
00080D  3               SECOND                        := $FF93
00080D  3               TKSA                          := $FF96
00080D  3               MEMTOP                        := $FF99
00080D  3               MEMBOT                        := $FF9C
00080D  3               SETTMO                        := $FFA2
00080D  3               IECIN                         := $FFA5
00080D  3               IECOUT                        := $FFA8
00080D  3               UNTALK                        := $FFAB
00080D  3               UNLISTEN                      := $FFAE
00080D  3               LISTEN                        := $FFB1
00080D  3               TALK                          := $FFB4
00080D  3               READST                        := $FFB7
00080D  3               SETLFS                        := $FFBA
00080D  3               SETNAM                        := $FFBD
00080D  3               OPEN                          := $FFC0
00080D  3               CLOSE                         := $FFC3
00080D  3               CHKIN                         := $FFC6
00080D  3               CHKOUT                        := $FFC9
00080D  3               CLRCHN                        := $FFCC
00080D  3               CHRIN                         := $FFCF
00080D  3               BASIN                         := CHRIN ; alias
00080D  3               CHROUT                        := $FFD2
00080D  3               BSOUT                         := CHROUT ; alias
00080D  3               LOAD                          := $FFD5
00080D  3               SAVE                          := $FFD8
00080D  3               SETTIM                        := $FFDB
00080D  3               RDTIM                         := $FFDE
00080D  3               STOP                          := $FFE1
00080D  3               GETIN                         := $FFE4
00080D  3               CLALL                         := $FFE7
00080D  3               UDTIM                         := $FFEA
00080D  3               SCREEN                        := $FFED
00080D  3               PLOT                          := $FFF0
00080D  3               IOBASE                        := $FFF3
00080D  3               
00080D  3               ; BASIC Vectors
00080D  3               BASIC_PANIC       := $C000
00080D  3               BASIC_INIT        := $C003
00080D  3               
00080D  3               
00080D  3               ; VRAM Addresses
00080D  3               VRAM_petscii   = $0F800
00080D  3               VRAM_psg       = $1F9C0
00080D  3               VRAM_palette   = $1FA00
00080D  3               VRAM_sprattr   = $1FC00
00080D  3               
00080D  3               ; RAM Vectors
00080D  3               IRQVec         := $0314
00080D  3               BRKVec         := $0316
00080D  3               NMIVec         := $0318
00080D  3               FETVec         := $03AF
00080D  3               ;STAVec         := TBD
00080D  3               ;CMPVec         := TBD
00080D  3               
00080D  3               
00080D  3               ;   Macros
00080D  3               
00080D  3               .macro VERA_SET_ADDR addr, stride
00080D  3                  .ifnblank stride
00080D  3                     .if stride < 0
00080D  3                        lda #((^addr) | $08 | ((0-stride) << 4))
00080D  3                     .else
00080D  3                        lda #((^addr) | (stride << 4))
00080D  3                     .endif
00080D  3                  .else
00080D  3                     lda #(^addr) | $10
00080D  3                  .endif
00080D  3               
00080D  3                  sta VERA_addr_bank
00080D  3                  lda #(>addr)
00080D  3                  sta VERA_addr_high
00080D  3                  lda #(<addr)
00080D  3                  sta VERA_addr_low
00080D  3               .endmacro
00080D  3               
00080D  3               .macro JSRFAR far_sr_addr, bank
00080D  3               	jsr JSRFAR_kernal_addr
00080D  3               	.addr far_sr_addr
00080D  3               	.byte bank
00080D  3               .endmacro
00080D  3               
00080D  3               .endif
00080D  3               
00080D  2               init:
00080D  2               	.a16
00080D  2               	.i8
00080D  2  18           	clc
00080E  2  FB           	xce
00080F  2  E2 10        	sep #$10
000811  2  C2 20        	rep #$20
000813  2  A9 40 00     	lda #wnumber
000816  2  85 30        	sta width
000818  2  A9 40 00     	lda #hnumber
00081B  2  85 32        	sta height
00081D  2  A9 30 00     	lda #xnumber
000820  2  85 34        	sta xpoint
000822  2  85 2A        	sta xpoint2
000824  2  A9 30 00     	lda #ynumber
000827  2  85 36        	sta ypoint
000829  2  85 2C        	sta ypoint2
00082B  2  E2 20        	sep #$20
00082D  2               	.a8
00082D  2  A9 04        	lda #%00000100
00082F  2  8D 34 9F     	sta VERA_L1_config
000832  2  A9 01        	lda #1
000834  2  8D 36 9F     	sta VERA_L1_tilebase
000837  2  A9 10        	lda #$10
000839  2  8D 22 9F     	sta VERA_addr_bank
00083C  2  9C 20 9F     	stz VERA_addr_low
00083F  2  9C 21 9F     	stz VERA_addr_high
000842  2  A9 01        	lda #$01
000844  2  A0 9B        	ldy #155
000846  2               clear_screen:
000846  2  A2 FF        	ldx #$FF
000848  2               @loop:
000848  2  9C 23 9F     	stz VERA_data0
00084B  2  CA           	dex
00084C  2  D0 FA        	bne @loop
00084E  2  88           	dey
00084F  2  D0 F5        	bne clear_screen
000851  2               
000851  1               
000851  1               instructions:
000851  1               	.a16
000851  1  20 B6 08     	jsr calcy
000854  1  20 CE 08     	jsr calcx
000857  1  20 DE 08     	jsr calc_origin
00085A  1               
00085A  1  18           	clc
00085B  1  20 E6 08     	jsr width_draw
00085E  1  18           	clc
00085F  1  20 6E 09     	jsr height_draw
000862  1               
000862  1  A6 38        	ldx nibble
000864  1  86 39        	stx nibble2
000866  1  A5 34        	lda xpoint
000868  1  3A           	dec
000869  1  18           	clc
00086A  1  65 30        	adc width
00086C  1  85 34        	sta xpoint
00086E  1  20 CE 08     	jsr calcx
000871  1  A5 36        	lda ypoint
000873  1  3A           	dec
000874  1  18           	clc
000875  1  65 32        	adc height
000877  1  85 36        	sta ypoint
000879  1  20 B6 08     	jsr calcy
00087C  1  20 DE 08     	jsr calc_origin
00087F  1               
00087F  1  38           	sec
000880  1  20 E6 08     	jsr width_draw
000883  1  38           	sec
000884  1  20 6E 09     	jsr height_draw
000887  1               
000887  1               ; 	sec
000887  1               ;	jsr fill_screen
000887  1               @end:
000887  1  80 FE        	bra @end
000889  1               down:
000889  1  C2 20        	rep #$20
00088B  1  A5 2C        	lda ypoint2
00088D  1  1A           	inc
00088E  1  85 36        	sta ypoint
000890  1  85 2C        	sta ypoint2
000892  1  A5 2A        	lda xpoint2
000894  1  1A           	inc
000895  1  85 34        	sta xpoint
000897  1  85 2A        	sta xpoint2
000899  1  80 B6        	bra instructions
00089B  1               left:
00089B  1  C2 20        	rep #$20
00089D  1  A5 2A        	lda xpoint2
00089F  1  3A           	dec
0008A0  1  85 34        	sta xpoint
0008A2  1  A5 2C        	lda ypoint2
0008A4  1  85 36        	sta ypoint
0008A6  1  80 A9        	bra instructions
0008A8  1               right:
0008A8  1  C2 20        	rep #$20
0008AA  1  A5 2A        	lda xpoint2
0008AC  1  1A           	inc
0008AD  1  85 34        	sta xpoint
0008AF  1  A5 2C        	lda ypoint2
0008B1  1  85 36        	sta ypoint
0008B3  1  82 9B FF     	brl instructions
0008B6  1               calcy:						;make it a subroutine (the rts stuff)
0008B6  1  C2 20        	rep #$20
0008B8  1               	.a16
0008B8  1  A5 36        	lda ypoint
0008BA  1  0A           	asl
0008BB  1  0A           	asl
0008BC  1  0A           	asl
0008BD  1  0A           	asl
0008BE  1  0A           	asl
0008BF  1  0A           	asl
0008C0  1  85 22        	sta temp
0008C2  1  A5 36        	lda ypoint
0008C4  1  0A           	asl
0008C5  1  0A           	asl
0008C6  1  0A           	asl
0008C7  1  0A           	asl
0008C8  1  18           	clc
0008C9  1  65 22        	adc temp
0008CB  1  85 28        	sta ycalcd
0008CD  1  60           	rts
0008CE  1               calcx:						;make it a subroutine too
0008CE  1               ;	rep #$20				;maybe calcx and calcy = same subroutine (calcorigin)
0008CE  1               	.a16					;nibble at nibble
0008CE  1  A5 34        	lda xpoint
0008D0  1  29 07 00     	and #$0007
0008D3  1  AA           	tax
0008D4  1  A5 34        	lda xpoint
0008D6  1  4A           	lsr
0008D7  1  4A           	lsr
0008D8  1  4A           	lsr
0008D9  1  85 26        	sta xcalcd
0008DB  1  86 38        	stx nibble
0008DD  1               ;	sep #$20
0008DD  1               ;	.a8
0008DD  1  60           	rts
0008DE  1               calc_origin:
0008DE  1  A5 26        	lda xcalcd
0008E0  1  18           	clc
0008E1  1  65 28        	adc ycalcd		;0+x+y = x+y
0008E3  1  85 24        	sta origin
0008E5  1  60           	rts
0008E6  1               width_draw:			;subroutine (args = origin (memory), width (memory), carry (1 = reverse))
0008E6  1               	.a16
0008E6  1               	.i8
0008E6  1  A0 01        	ldy #1
0008E8  1  8C 25 9F     	sty VERA_ctrl
0008EB  1  A5 24        	lda	origin
0008ED  1  8D 20 9F     	sta VERA_addr_low
0008F0  1  9C 25 9F     	stz VERA_ctrl
0008F3  1  8D 20 9F     	sta VERA_addr_low
0008F6  1  A9 10 00     	lda #$0010
0008F9  1  90 03        	bcc @skip
0008FB  1  09 08 00     	ora #$0008
0008FE  1               @skip:
0008FE  1  AA           	tax
0008FF  1  8E 22 9F     	stx VERA_addr_bank
000902  1  8C 25 9F     	sty VERA_ctrl
000905  1  8E 22 9F     	stx VERA_addr_bank
000908  1  A5 30        	lda width
00090A  1  18           	clc
00090B  1  65 38        	adc nibble
00090D  1  29 07 00     	and #$07
000910  1  85 22        	sta temp
000912  1  A5 30        	lda width
000914  1  4A           	lsr
000915  1  4A           	lsr
000916  1  4A           	lsr
000917  1  E2 20        	sep #$20
000919  1               	.a8
000919  1  E0 18        	cpx #$18
00091B  1  F0 26        	beq reverse
00091D  1               @copy_first:
00091D  1  AA           	tax
00091E  1  A4 38        	ldy nibble
000920  1  B9 C0 09     	lda p1,y
000923  1  0D 23 9F     	ora VERA_data0
000926  1  8D 24 9F     	sta VERA_data1
000929  1               @skip2:
000929  1  A9 FF        	lda #$FF
00092B  1  CA           	dex
00092C  1               @copy_8px:
00092C  1  8D 23 9F     	sta VERA_data0
00092F  1  2C 24 9F     	bit VERA_data1
000932  1  CA           	dex
000933  1  D0 F7        	bne @copy_8px
000935  1               @copy_last:
000935  1  A4 22        	ldy temp
000937  1  F0 09        	beq @skip3
000939  1  B9 B8 09     	lda p0,y
00093C  1  0D 23 9F     	ora VERA_data0
00093F  1  8D 24 9F     	sta VERA_data1
000942  1               @skip3:
000942  1  60           	rts
000943  1               reverse:
000943  1  48           	pha
000944  1  A5 38        	lda nibble
000946  1  1A           	inc
000947  1  29 07        	and #7
000949  1  F0 0A        	beq @skip
00094B  1  A8           	tay
00094C  1  B9 B8 09     	lda p0,y
00094F  1  0D 23 9F     	ora VERA_data0
000952  1  8D 24 9F     	sta VERA_data1
000955  1               @skip:
000955  1  A9 FF        	lda #$FF
000957  1  7A           	ply
000958  1  88           	dey
000959  1               @r_copy_8px:
000959  1  8D 23 9F     	sta VERA_data0
00095C  1  2C 24 9F     	bit VERA_data1
00095F  1  88           	dey
000960  1  D0 F7        	bne @r_copy_8px
000962  1               @r_copy_last:
000962  1  A4 39        	ldy nibble2
000964  1  B9 C0 09     	lda p1,y
000967  1  0D 23 9F     	ora VERA_data0
00096A  1  8D 24 9F     	sta VERA_data1
00096D  1               @skip2:
00096D  1  60           	rts
00096E  1               height_draw:
00096E  1  A5 24        	lda	origin
000970  1  A0 01        	ldy #1
000972  1  9C 25 9F     	stz VERA_ctrl
000975  1  8D 20 9F     	sta VERA_addr_low
000978  1  8C 25 9F     	sty VERA_ctrl
00097B  1  8D 20 9F     	sta VERA_addr_low
00097E  1  A9 C0        	lda #$00C0
000980  1  AA           	tax
000981  1  90 06        	bcc @skip
000983  1  09 08        	ora #$0008
000985  1  AA           	tax
000986  1  AD 20 9F     	lda VERA_addr_low
000989  1               ;	clc
000989  1               ;	adc #$0050
000989  1               ;	sta VERA_addr_low
000989  1               @skip:
000989  1  9C 25 9F     	stz VERA_ctrl
00098C  1  8E 22 9F     	stx VERA_addr_bank
00098F  1  8C 25 9F     	sty VERA_ctrl
000992  1  8E 22 9F     	stx VERA_addr_bank
000995  1  E2 20        	sep #$20
000997  1               	.a8
000997  1  A4 38        	ldy nibble
000999  1               ;	cpx #$B8
000999  1               ;	bne @skip2
000999  1               ;	tya
000999  1               ;	eor #$07
000999  1               ;	tay
000999  1               @skip2:
000999  1  B9 C8 09     	lda p2, y
00099C  1  C2 10        	rep #$10
00099E  1               	.i16
00099E  1  A6 32        	ldx height
0009A0  1  CA           	dex
0009A1  1  2C 23 9F     	bit VERA_data0
0009A4  1  2C 24 9F     	bit VERA_data1
0009A7  1               @draw:
0009A7  1  0D 23 9F     	ora VERA_data0
0009AA  1  8D 24 9F     	sta VERA_data1
0009AD  1  CA           	dex
0009AE  1  D0 F7        	bne @draw
0009B0  1  E2 10        	sep #$10
0009B2  1  C2 20        	rep #$20
0009B4  1  9C 25 9F     	stz VERA_ctrl
0009B7  1               	.a16
0009B7  1               	.i8
0009B7  1  60           	rts
0009B8  1               
0009B8  1  00 80 C0 E0  p0: .byte $00, $80, $C0, $E0, $F0, $F8, $FC, $FE
0009BC  1  F0 F8 FC FE  
0009C0  1  FF 7F 3F 1F  p1:	.byte $FF, $7F, $3F, $1F, $0F, $07, $03, $01
0009C4  1  0F 07 03 01  
0009C8  1  80 40 20 10  p2:	.byte $80, $40, $20, $10, $08, $04, $02, $01
0009CC  1  08 04 02 01  
0009D0  1               
0009D0  1               ;.include "fill_screen.asm"
0009D0  1               
